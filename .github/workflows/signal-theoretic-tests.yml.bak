name: Signal-Theoretic CRISPR Experiment Tests

"on":
  push:
    paths:
      - 'experiments/signal_theoretic_crispr/**'
      - 'requirements.txt'
  pull_request:
    paths:
      - 'experiments/signal_theoretic_crispr/**'
      - 'requirements.txt'

jobs:
  hg38-fail-fast-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Test fail-fast without hg38 (should fail)
      run: |
        echo "Testing fail-fast behavior when HG38_FA is not set..."
        # This should fail with exit code 2
        set +e
        python experiments/signal_theoretic_crispr/smoke_test.py
        exit_code=$?
        set -e
        
        if [ $exit_code -eq 2 ]; then
          echo "✓ PASS: Correctly failed with exit code 2 when hg38 missing"
        else
          echo "✗ FAIL: Expected exit code 2, got $exit_code"
          exit 1
        fi
    
    - name: Test main script fail-fast without hg38 (should fail)
      run: |
        echo "Testing main script fail-fast behavior..."
        set +e
        python -m experiments.signal_theoretic_crispr.main --seed 42 --bootstrap 10 --permutation 10
        exit_code=$?
        set -e
        
        if [ $exit_code -ne 0 ]; then
          echo "✓ PASS: Main script correctly failed when hg38 missing"
        else
          echo "✗ FAIL: Main script should have failed when hg38 missing"
          exit 1
        fi

  smoke-tests-with-hg38:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Create minimal hg38 test file
      run: |
        mkdir -p test_data
        # Create a minimal valid FASTA file for testing
        cat > test_data/test_hg38.fa << 'EOF'
        >chr1
        NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN
        NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN
        ACGTACGTACGTACGTACGTACGTACGTACGTACGTACGTACGTACGTACGTACGTACGTACGTACGTACGTACGTACGTACGTACGTACGTACGTACGT
        ACGTACGTACGTACGTACGTACGTACGTACGTACGTACGTACGTACGTACGTACGTACGTACGTACGTACGTACGTACGTACGTACGTACGTACGTACGT
        NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN
        >chr2
        NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN
        NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN
        CGCGCGCGCGCGCGCGCGCGCGCGCGCGCGCGCGCGCGCGCGCGCGCGCGCGCGCGCGCGCGCGCGCGCGCGCGCGCGCGCGCGCGCGCGCGCG
        CGCGCGCGCGCGCGCGCGCGCGCGCGCGCGCGCGCGCGCGCGCGCGCGCGCGCGCGCGCGCGCGCGCGCGCGCGCGCGCGCGCGCGCGCGCGCG
        NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN
        EOF
        # Set HG38_FA to our test file
        export HG38_FA="$(pwd)/test_data/test_hg38.fa"
        echo "HG38_FA=$HG38_FA" >> $GITHUB_ENV
    
    - name: Verify environment determinism
      run: |
        echo "Verifying deterministic environment..."
        pip freeze > actual_env.txt
        echo "Expected packages from requirements.txt:"
        cat requirements.txt | grep -v "^#" | grep -v "^$"
        echo "Actual installed packages:"
        cat actual_env.txt
        # Check that core packages match (allowing for additional dependencies)
        for pkg in mpmath numpy biopython scikit-learn pandas matplotlib scipy pyfaidx; do
          if ! grep -q "^${pkg}==" actual_env.txt; then
            echo "ERROR: ${pkg} not found in environment"
            exit 1
          fi
        done
        echo "✓ Core packages verified"
    
    - name: Run smoke tests with hg38
      env:
        HG38_FA: ${{ github.workspace }}/test_data/test_hg38.fa
      run: |
        cd ${{ github.workspace }}
        python experiments/signal_theoretic_crispr/smoke_test.py
    
    - name: Run minimal experiment with hg38
      env:
        HG38_FA: ${{ github.workspace }}/test_data/test_hg38.fa
      run: |
        cd ${{ github.workspace }}
        python -m experiments.signal_theoretic_crispr.main \
          --seed 42 \
          --bootstrap 10 \
          --permutation 10 \
          --output results/ci-test
    
    - name: Upload experiment results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: signal-theoretic-results
        path: |
          results/ci-test/**
        retention-days: 7
    
    - name: Upload environment snapshot
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: environment-snapshot
        path: |
          actual_env.txt
        retention-days: 7